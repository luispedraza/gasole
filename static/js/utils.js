var Lat2Km = 111.03461;
var Km2Lat = 0.009006;
var Lon2Km = 85.39383;
var Km2Lon = 0.01171;
var LL2Km = 98.2;
var Km2LL = 0.010183;

// Obtenido de: http://www.irunmywebsite.com/raphael/SVGTOHTML_LIVE90.php
// Paths de las provincias
var PATHS = 
{	"15":'M 17.5 20.7 L 20.7 21.6 L 15 32.2 C 14.9 32.3 14.9 32.4 14.9 32.6 L 12.3 51.7 L -7.7 56.3 C -7.7 56.3 -7.8 56.3 -7.9 56.3 C -7.9 56.2 -7.9 56.2 -8 56.3 L -9.8 56.7 C -10 56.7 -10.1 56.7 -10.2 56.9 L -15.1 60 L -13.1 54.1 C -13.1 54.1 -13.1 54 -13.1 54 C -13.1 53.9 -13.1 53.8 -13.1 53.8 C -13.1 53.5 -13.2 53.4 -13.3 53.2 L -20.2 44.4 L -9.3 34.3 L 6.6 34.3 C 6.7 34.3 6.9 34.3 7.1 34.1 C 7.3 34 7.5 33.8 7.5 33.6 L 7.5 33.6 L 9.4 26.2 L 17.5 20.7Z',
	"36":'M 6.5 63.5 L 6.5 63.5 L 0.9 67.8 C 0.7 67.9 0.6 68.1 0.5 68.3 C 0.4 68.5 0.4 68.7 0.5 69 L 3.6 77.8 L -12.6 87.3 L -12.6 81 L -5.8 74.8 C -5.8 74.7 -5.7 74.7 -5.7 74.6 C -5.7 74.6 -5.6 74.5 -5.6 74.4 C -5.5 74.3 -5.5 74.1 -5.5 74 L -5.5 71.9 C -5.5 71.6 -5.6 71.4 -5.8 71.3 C -5.9 71.1 -6.1 71 -6.3 70.9 C -6.3 70.9 -6.4 70.9 -6.4 70.9 C -6.6 70.9 -6.8 71 -7 71.1 L -7 71.1 L -10.8 73.3 L -10.8 67.1 L -7 58.1 L 12.7 53.6 L 16.1 59.1 L 14.4 63.3 L 7.1 63.3 C 6.9 63.3 6.7 63.4 6.5 63.5Z',
	"27":'M 22.7 22.1 L 30.9 23.5 L 33.1 29 L 33.1 29 C 33.1 29.2 33.3 29.4 33.5 29.5 C 33.5 29.5 33.5 29.5 33.5 29.6 C 33.7 29.6 33.8 29.7 34 29.7 L 37.9 29.7 L 35.4 33 C 35.3 33 35.3 33.1 35.3 33.2 L 35.2 34.3 C 35.2 34.4 35.2 34.5 35.3 34.6 L 41 44.8 L 38.6 49.2 C 38.6 49.2 38.6 49.3 38.6 49.4 C 38.5 49.4 38.6 49.5 38.6 49.6 L 39.1 51 C 39.2 51 39.2 51.1 39.3 51.2 C 39.3 51.2 39.4 51.2 39.4 51.3 L 42.8 52.5 L 40.6 58.3 L 37.8 59.4 C 37.7 59.5 37.6 59.5 37.5 59.6 L 36.9 60.5 C 36.9 60.6 36.8 60.7 36.9 60.8 L 36.9 67.9 C 36.9 68 36.9 68.1 37 68.2 L 33.4 73.3 L 29.7 69.7 C 29.5 69.5 29.3 69.5 29.2 69.5 C 29 69.4 28.8 69.4 28.6 69.5 L 23.2 71 L 16.3 64.1 L 18.1 59.4 C 18.1 59.3 18.2 59.3 18.2 59.2 C 18.2 59.1 18.2 59 18.2 59 C 18.2 58.8 18.1 58.7 18.1 58.5 L 18 58.5 L 14.2 52.3 L 16.9 33 L 22.7 22.1Z',
	"32":'M 2.7 69 L 7.5 65.3 L 14.7 65.3 L 22.2 72.8 C 22.3 72.9 22.4 73 22.6 73.1 C 22.6 73.1 22.7 73.1 22.8 73.1 C 22.8 73.1 22.9 73.1 23 73.1 C 23 73.1 23.1 73.1 23.1 73.1 L 28.7 71.5 L 32.8 75.5 C 32.9 75.6 33.1 75.7 33.3 75.7 C 33.5 75.8 33.7 75.8 33.9 75.7 C 33.9 75.7 34 75.7 34.1 75.6 C 34.1 75.5 34.2 75.5 34.3 75.4 C 34.3 75.4 34.3 75.4 34.3 75.4 L 38.6 69.4 L 42.7 69.6 L 44.8 74.1 L 37.9 83.1 C 37.8 83.1 37.8 83.2 37.8 83.3 L 37.6 83.9 C 37.6 83.9 37.6 84 37.6 84 L 37.6 86.3 L 35.3 86.3 C 35.1 86.2 35 86.3 34.8 86.4 C 34.7 86.4 34.5 86.6 34.5 86.7 L 30.8 91.1 L 15.1 88.1 L 15.2 88.1 C 14.9 88 14.7 88 14.4 88.2 L 14.5 88.2 L 8 91.2 L 6 88.3 L 10.3 84.3 L 10.3 84.3 C 10.5 84.1 10.6 83.9 10.6 83.6 C 10.5 83.3 10.5 83.1 10.3 82.9 L 10.3 82.9 L 5.7 77.7 L 2.7 69Z',
	"33":'M 107.5 37.3 L 106.6 39.3 L 99.3 42 C 99.2 42 99.2 42 99.2 42.1 L 99.1 42.1 L 99.1 42.1 L 81.6 48.6 L 68.7 47.2 C 68.6 47.2 68.6 47.2 68.5 47.2 L 68.2 47.3 C 68.2 47.3 68.1 47.3 68.1 47.3 L 55.5 50.7 L 45.1 50.1 L 42.1 49 L 44 45.4 C 44 45.3 44.1 45.2 44.1 45.2 L 44.1 44.2 C 44 44.1 44 44 44 44 L 38.4 34 L 41.7 29.7 L 75.8 29.7 L 107.5 37.3Z',
	"24":'M 99.1 45.3 L 101.9 50.6 L 97.6 68.3 L 94.8 77.3 L 86 79.5 C 85.7 79.5 85.5 79.5 85.4 79.7 C 85.3 79.8 85.3 79.9 85.2 80 L 85.2 80 L 82.1 87.3 L 46.4 77 L 47.8 75.2 C 47.8 75.1 47.8 75 47.9 75 L 48 74 C 48 73.9 47.9 73.8 47.9 73.7 L 45 67.4 C 44.9 67.4 44.9 67.3 44.8 67.3 L 44 66.7 C 43.9 66.6 43.8 66.6 43.7 66.6 L 39.9 66.5 L 39.9 61.9 L 42.3 60.9 C 42.4 60.8 42.4 60.8 42.5 60.8 L 43 60.2 C 43.1 60.1 43.1 60 43.1 60 L 45.8 53.1 L 55.8 53.7 C 55.9 53.7 55.9 53.7 56 53.7 L 68.6 50.3 L 81.7 51.7 C 81.7 51.7 81.7 51.7 81.8 51.7 L 82.2 51.6 C 82.2 51.6 82.3 51.6 82.3 51.6 L 99.1 45.3Z',
	"34":'M 99.5 68.9 L 99.5 68.9 L 103.3 52.5 L 104 53.1 C 104 53.1 104.1 53.1 104.2 53.1 C 104.2 53.1 104.3 53.2 104.4 53.2 L 111.6 52.1 L 119.9 60.2 L 115.7 65.4 L 115.7 65.4 C 115.5 65.6 115.4 65.9 115.5 66.2 L 115.5 66.1 L 117.5 85 C 117.5 85.1 117.5 85.3 117.7 85.5 L 117.8 85.6 L 123.7 92.2 L 121 98 L 96.6 92.1 L 96.6 78.3 L 99.5 68.9Z',
	"39":'M 119.4 37.8 C 119.5 37.8 119.5 37.8 119.6 37.8 C 119.6 37.7 119.7 37.7 119.7 37.7 L 130.2 34.6 L 132.1 36.1 C 132.3 36.2 132.4 36.3 132.7 36.3 C 132.8 36.3 133 36.3 133.1 36.2 C 133.1 36.2 133.2 36.2 133.2 36.2 L 136.4 34.6 L 144.3 38.5 L 139 41.3 C 138.9 41.3 138.8 41.4 138.8 41.4 L 138.2 42.3 C 138.2 42.4 138.1 42.5 138.2 42.6 L 138.2 44.8 L 133.2 44 C 133.1 43.9 133 44 133 44 C 132.9 44 132.8 44 132.8 44.1 L 123.4 52.4 C 123.3 52.5 123.2 52.6 123.2 52.8 L 123.1 54.1 C 123 54.2 123.1 54.3 123.2 54.5 L 126.1 58.4 L 123.5 59.7 L 113.1 49.4 C 113.1 49.3 113 49.3 112.9 49.3 L 112.1 49 C 112 48.9 111.9 48.9 111.8 49 L 105 50 L 101.9 44.2 L 108.1 41.9 C 108.2 41.9 108.2 41.8 108.3 41.8 L 108.8 41.3 C 108.9 41.2 108.9 41.2 109 41.1 L 110.5 37.8 L 119.4 37.8Z',
	"49":'M 69.2 115.6 L 69.2 115.6 C 69 115.5 68.7 115.5 68.5 115.7 C 68.3 115.8 68.2 116 68.1 116.3 L 67.1 119.3 L 55.2 114 L 61.7 104.7 C 61.8 104.5 61.9 104.4 61.9 104.2 C 61.9 104 61.9 103.9 61.8 103.7 C 61.8 103.7 61.8 103.6 61.8 103.6 C 61.6 103.4 61.5 103.2 61.3 103.2 L 54.1 99.9 L 52.7 90.3 C 52.6 90.1 52.5 89.9 52.4 89.8 C 52.2 89.5 52 89.4 51.8 89.5 L 40.6 86.6 L 40.6 84.5 L 45.1 78.7 L 81.8 89.3 L 85.1 106.7 L 85.1 118.6 L 69.2 115.6Z',
	"09":'M 146.5 52.1 L 146.9 52.7 C 146.9 52.8 146.9 52.8 147 52.9 L 147.2 53 L 144.8 53 C 144.7 53 144.6 53 144.5 53.1 L 143.7 53.5 C 143.6 53.6 143.6 53.6 143.6 53.7 L 141.8 56.3 C 141.7 56.3 141.7 56.4 141.7 56.5 C 141.6 56.5 141.6 56.6 141.7 56.7 L 142 58.1 C 142 58.1 142 58.2 142.1 58.3 C 142.1 58.3 142.1 58.3 142.2 58.4 L 151.6 64 L 147.2 65 C 147.1 65 147 65 147 65.1 C 146.9 65.2 146.9 65.3 146.9 65.4 L 145.8 81.6 C 145.7 81.7 145.8 81.9 145.9 82 L 151.8 89.7 L 151.9 89.7 L 147.5 96.3 L 144.9 93.2 L 144.9 93.2 C 144.7 93 144.5 92.8 144.3 92.9 C 144.1 92.8 143.9 92.8 143.8 92.9 C 143.5 93 143.4 93.1 143.3 93.3 C 143.3 93.3 143.3 93.4 143.3 93.4 L 136.6 104.9 L 123.6 108.2 L 122.6 99.3 L 125.7 92.4 C 125.7 92.4 125.7 92.4 125.7 92.4 C 125.8 92.2 125.8 92.1 125.8 92 C 125.8 91.7 125.7 91.5 125.6 91.4 L 125.6 91.4 L 119.4 84.5 L 117.5 66.3 L 121.3 61.7 L 122.2 62.5 C 122.2 62.6 122.3 62.6 122.4 62.7 L 123.6 62.9 C 123.7 62.9 123.8 62.9 123.9 62.8 L 129.1 60.3 C 129.1 60.2 129.2 60.2 129.3 60.1 C 129.3 60 129.3 60 129.3 59.9 L 129.7 58.4 C 129.7 58.4 129.7 58.3 129.7 58.2 C 129.7 58.1 129.6 58.1 129.6 58 L 126.4 53.8 L 134.2 46.9 L 139.3 48.2 C 139.3 48.2 139.4 48.2 139.4 48.2 C 139.5 48.2 139.6 48.2 139.7 48.2 L 139.9 48.2 C 139.9 48.2 140 48.2 140 48.2 L 145.5 46.9 L 146.5 52 C 146.5 52 146.5 52.1 146.5 52.1Z M 157.8 59.8 L 161.9 60.2 L 163.3 64.1 L 157.7 60.7 L 157.8 59.8Z',
	"20":'M 176.8 42.2 L 176.9 42.2 L 185.2 38.8 L 186.8 40.2 L 177.7 51.4 L 171.8 55 L 163.9 50.9 L 168.9 40.9 L 176.2 42.2 L 176.3 42.2 C 176.3 42.2 176.3 42.2 176.3 42.2 C 176.5 42.2 176.6 42.2 176.8 42.2Z',
	"48":'M 148.3 39.5 L 157.5 36.6 L 167 40.4 L 162 50.2 L 154.7 49.2 L 153.6 46.1 L 153.6 46.2 C 153.5 45.9 153.4 45.8 153.3 45.7 L 153.2 45.7 C 153.1 45.5 152.9 45.5 152.8 45.5 L 148.1 44.4 L 146.7 43.6 C 146.6 43.5 146.4 43.5 146.3 43.6 L 141.2 44.8 L 141.2 43.5 L 147.6 40.1 L 147.7 40.1 C 147.9 39.9 148.1 39.7 148.3 39.5Z',
	"01":'M 153.4 50.9 C 153.5 50.9 153.6 51 153.7 51 C 153.7 51 153.8 51 153.8 51.1 L 162.3 52.3 L 170.6 56.7 L 167.9 65.1 C 167.9 65.1 167.9 65.2 167.9 65.2 L 167.8 65.5 C 167.8 65.5 167.8 65.5 167.8 65.6 L 167.8 67.2 L 166.6 69.5 L 158.3 67.2 L 156.8 63.9 C 156.8 63.9 156.8 63.8 156.7 63.8 L 156.3 63.3 C 156.3 63.3 156.2 63.3 156.2 63.2 L 145.1 56.7 L 145.6 56 L 151.6 56 C 151.7 56 151.8 56 151.9 55.9 C 152 55.8 152 55.8 152.1 55.7 L 152.7 53.9 C 152.7 53.7 152.7 53.7 152.7 53.6 C 152.6 53.4 152.6 53.4 152.5 53.3 L 149.3 50.8 L 148.5 46.5 L 151.9 47.3 L 153 50.3 C 152.9 50.5 153.1 50.7 153.3 50.9 C 153.3 50.9 153.4 50.9 153.4 50.9Z M 155.9 61.7 L 164.3 66.8 L 165.6 65.5 L 162.8 58 L 156.2 58 L 155.7 60.7 L 155.9 61.7Z',
	"31":'M 173.5 57.4 L 179.5 53.8 C 179.5 53.7 179.5 53.7 179.6 53.7 C 183 49.6 185.6 46.5 187.3 44.5 C 188.1 43.4 188.8 42.7 189.2 42.2 C 189.4 42 189.6 41.8 189.7 41.7 L 195.4 43.2 L 193.5 49.7 C 193.4 49.9 193.4 50.2 193.7 50.5 C 193.8 50.8 193.9 51 194.1 51 C 194.1 51 194.1 51 194.1 51 L 198.4 52.7 C 198.4 52.8 198.5 52.8 198.6 52.8 C 198.7 52.7 198.7 52.7 198.8 52.7 C 199.5 52.3 199.8 52 199.7 51.8 L 199.7 49.8 L 211.4 54.6 L 208 61.5 L 199.7 68.5 C 199.7 68.6 199.6 68.7 199.6 68.8 L 195.1 83.9 C 195.1 84 195.1 84.1 195.1 84.1 C 195.1 84.2 195.2 84.3 195.2 84.4 L 197.5 87.5 L 194.9 91.5 L 185.5 88.6 L 190.3 82.3 C 190.4 82.2 190.4 82.1 190.4 82.1 C 190.4 82 190.4 81.9 190.4 81.8 C 190.3 81.7 190.3 81.7 190.2 81.6 L 178.2 72.8 C 178.1 72.7 178 72.7 178 72.7 L 169.6 70.4 L 170.7 68.2 C 170.7 68.2 170.7 68.1 170.7 68.1 L 170.8 67.7 C 170.8 67.6 170.8 67.6 170.8 67.6 L 170.8 65.8 L 173.5 57.4Z',
	"22":'M 225.3 57.8 L 234 63.3 C 234.1 63.3 234.2 63.3 234.3 63.4 C 234.3 63.4 234.4 63.3 234.5 63.3 L 240.7 60.8 L 253.5 62.2 L 256.4 73.7 L 252.8 90.7 L 245.8 99.6 L 245.7 99.7 C 245.6 99.8 245.5 100.2 245.5 100.7 C 245.6 101.3 245.8 101.6 246 101.8 L 246 101.8 L 248.2 103.6 L 244.3 107.4 C 244.2 107.4 244.1 107.7 244 108.1 L 244 108 C 243.8 108.5 243.8 108.8 243.9 108.9 L 243.9 108.9 L 244.8 111 L 238.6 111.6 L 234.8 104.4 C 234.8 104.3 234.7 104.3 234.6 104.2 L 234.6 104.2 L 217.7 89.5 L 217.7 78.6 C 217.7 78.5 217.7 78.4 217.7 78.4 C 216.5 75.8 215.2 73.2 214 70.6 L 214 70.7 C 211.7 65.8 210.5 63.4 210.3 63.5 C 210.4 63.5 210.5 63.4 210.5 63.3 L 214.2 55.7 L 219.1 57.7 C 219.2 57.7 219.2 57.8 219.3 57.8 L 225.3 57.8Z',
	"25":'M 256 61 L 255.8 57 L 273 62 L 274.8 70 C 274.8 70.1 274.9 70.2 275 70.3 C 275.1 70.4 275.2 70.4 275.3 70.4 L 284 69.8 L 286.8 73.8 L 283.4 76.6 C 283.3 76.7 283.2 76.8 283.2 76.9 L 280.8 94.1 L 276.4 95.1 C 276.3 95.1 276.2 95.2 276.1 95.3 L 275.7 95.8 C 275.6 95.8 275.6 95.9 275.6 96.1 L 275.6 102 L 266.5 106.8 C 266.5 106.8 266.4 106.9 266.4 106.9 L 261.8 111.4 L 249.4 114.3 L 248.2 111.5 L 248.2 111.2 C 248.2 111.1 248.1 111 248 110.9 C 248 110.8 248 110.8 247.9 110.8 L 247.1 108.8 L 251.5 104.6 L 251.5 104.6 C 251.7 104.6 251.7 103.9 251.7 102.7 C 251.6 102.7 251.6 102.6 251.6 102.5 C 251.6 102.5 251.5 102.4 251.5 102.4 L 249 100.3 L 255.3 92.3 C 255.4 92.2 255.4 92.2 255.4 92.2 C 255.5 92 255.5 91.9 255.6 91.7 C 255.6 91.7 255.6 91.6 255.7 91.6 L 259.5 74 C 259.5 73.8 259.5 73.5 259.4 73.3 C 258.9 71.3 258.3 69.2 257.8 67.2 C 256.8 63.7 256.2 61.7 255.9 60.9 L 256 61Z',
	"08":'M 292 81.6 C 292.3 81.9 292.7 82.1 293 81.9 L 293 81.9 L 298.4 80.2 L 306 82.7 L 304.8 87 L 300.3 88.3 C 300.1 88.2 299.9 88.4 299.7 88.9 L 299.7 88.9 C 299.4 89.4 299.4 89.7 299.6 89.9 L 301.3 92.8 C 301.3 92.9 301.3 92.9 301.4 93 L 301.8 93.2 C 301.8 93.3 301.9 93.3 302 93.3 L 313.4 94.7 L 314.1 96.7 L 300.9 104.7 C 300.8 104.7 300.7 104.8 300.7 104.9 L 297.5 111.3 L 285 115.1 L 277.6 102.3 L 277.6 96.9 L 281.9 96 C 281.9 95.9 281.9 95.9 282 95.9 C 282.4 95.7 282.7 95.4 282.7 95.1 L 282.7 95.1 L 285.2 77.6 L 287.9 75.5 L 291.9 81.5 C 291.9 81.5 291.9 81.5 292 81.6Z',
	"17":'M 323.3 75.7 C 323.3 75.7 323.3 75.7 323.3 75.7 C 323.1 76.1 323.1 76.4 323.3 76.5 L 326.3 86.6 L 315.8 95.5 L 315.1 93.5 C 315.1 93.4 315 93.3 315 93.3 L 314.5 92.9 C 314.4 92.8 314.3 92.8 314.3 92.8 L 302.7 91.4 L 301.9 89.9 L 305.9 88.8 C 306 88.8 306 88.7 306.1 88.7 L 306.5 88.3 C 306.5 88.2 306.6 88.2 306.6 88.1 L 308.2 82.4 C 308.4 82.2 308.3 81.9 308.1 81.6 C 308.1 81.5 308.1 81.5 308.1 81.5 C 307.9 81.3 307.7 81.1 307.6 81.1 C 307.6 81.1 307.6 81.1 307.6 81.1 L 298.7 78.2 C 298.5 78.2 298.3 78.2 298.1 78.2 L 293.2 79.8 L 289 73.5 C 289 73.4 288.9 73.4 288.9 73.4 L 288.9 73.4 L 286.9 70.5 L 294.2 72.8 C 294.3 72.9 294.4 72.9 294.6 72.8 L 300.5 70.1 L 310.9 72.4 C 311 72.4 311.1 72.4 311.2 72.3 L 319.8 67.6 L 327.5 72 L 327.5 72.7 L 323.6 75.2 C 323.6 75.2 323.6 75.3 323.6 75.3 C 323.5 75.3 323.4 75.5 323.3 75.7Z',
	"07":'M 327.9 162.8 L 329.6 167.4 L 333.2 169 L 333.3 169 L 337 167.4 C 337.1 167.4 337.2 167.4 337.3 167.4 L 340.3 168.3 C 340.4 168.4 340.4 168.4 340.5 168.5 C 340.6 168.5 340.6 168.6 340.6 168.7 C 340.6 168.8 340.6 168.9 340.6 169 L 336.9 177.4 L 336.9 182.3 C 336.9 182.4 336.9 182.5 336.9 182.5 C 336.8 182.6 336.8 182.7 336.7 182.7 L 330.7 187.4 C 330.7 187.5 330.6 187.5 330.5 187.5 C 330.4 187.5 330.3 187.5 330.2 187.5 C 330.1 187.4 330 187.3 330 187.3 L 328.3 183.9 L 321.3 183.9 C 321.2 183.9 321 183.9 321 183.8 C 320.9 183.7 320.8 183.6 320.8 183.5 L 319.7 178.2 L 316.9 176.9 L 313 181.2 C 312.9 181.3 312.8 181.4 312.6 181.4 C 312.5 181.4 312.4 181.4 312.3 181.3 L 308.4 178 C 308.4 177.9 308.3 177.8 308.3 177.8 C 308.2 177.7 308.2 177.6 308.3 177.5 C 308.3 177.4 308.4 177.3 308.4 177.2 L 318.4 168.1 C 318.4 168.1 318.4 168.1 318.5 168.1 L 327.2 162.5 C 327.3 162.5 327.4 162.4 327.5 162.5 C 327.6 162.5 327.7 162.5 327.8 162.6 C 327.8 162.6 327.9 162.7 327.9 162.8Z M 350.6 156.5 L 360.5 154.9 C 360.6 154.9 360.7 154.9 360.8 155 C 360.9 155 361 155.1 361.1 155.2 L 365.1 162.4 C 365.1 162.5 365.1 162.6 365.1 162.8 C 365 162.9 365 163 364.9 163.1 L 363.9 163.7 C 363.8 163.7 363.7 163.7 363.7 163.8 C 363.6 163.8 363.5 163.7 363.4 163.7 L 356.4 159.9 L 352.7 161 C 352.5 161 352.4 161 352.3 161 C 352.2 160.9 352.1 160.8 352.1 160.7 L 350.2 157.2 C 350.1 157.1 350.1 157 350.1 156.9 C 350.1 156.8 350.2 156.7 350.3 156.6 C 350.4 156.5 350.4 156.5 350.6 156.5Z M 287.2 196.4 C 287.3 196.5 287.3 196.6 287.4 196.7 L 288.2 199.6 C 288.2 199.6 288.2 199.7 288.2 199.8 C 288.2 199.9 288.2 200 288.1 200.1 L 282 206.3 C 281.9 206.4 281.8 206.4 281.7 206.4 C 281.6 206.4 281.5 206.4 281.5 206.4 L 276.7 204.6 C 276.6 204.5 276.5 204.5 276.5 204.4 C 276.4 204.3 276.4 204.2 276.4 204.1 C 276.4 204 276.4 203.9 276.5 203.8 L 277.3 202.3 L 278.3 199 C 278.3 198.9 278.4 198.8 278.5 198.8 C 278.5 198.7 278.6 198.6 278.7 198.6 L 286.8 196.4 C 286.9 196.3 287 196.4 287.2 196.4Z M 285.6 210.2 L 282.6 212.8 C 282.5 212.8 282.4 212.9 282.2 212.9 C 282.1 212.9 282 212.8 281.9 212.7 C 281.8 212.6 281.7 212.5 281.7 212.4 L 281.7 211.3 C 281.7 211.2 281.8 211.1 281.8 211 C 281.8 211 281.9 210.9 281.9 210.8 L 283.8 209.5 C 283.9 209.4 284 209.4 284.1 209.3 L 285.2 209.3 C 285.4 209.4 285.4 209.4 285.5 209.5 C 285.6 209.5 285.7 209.6 285.7 209.7 C 285.8 209.8 285.8 209.9 285.7 210 C 285.7 210.1 285.7 210.2 285.6 210.2Z',
	"38":'M 280.4 323.4 C 280.5 323.5 280.6 323.5 280.7 323.7 L 281.5 325.4 C 281.5 325.5 281.5 325.6 281.5 325.7 C 281.5 325.8 281.4 325.9 281.4 325.9 L 271 336.1 L 267 344.9 C 267 344.9 266.9 345 266.9 345.1 C 266.8 345.1 266.7 345.1 266.7 345.2 L 262 346.4 C 261.8 346.4 261.7 346.4 261.6 346.3 C 261.5 346.3 261.4 346.2 261.4 346.1 L 254.8 333.2 C 254.8 333.1 254.8 333 254.8 332.9 C 254.8 332.8 254.9 332.7 255 332.6 C 255 332.5 255.1 332.5 255.2 332.5 L 268.2 331.3 L 268.2 331.2 L 268.2 331.2 L 271.5 326.3 C 271.6 326.2 271.7 326.1 271.8 326.1 L 280.1 323.4 C 280.2 323.3 280.3 323.3 280.4 323.4Z M 226.7 321.2 C 226.7 321.3 226.7 321.4 226.7 321.5 L 224 327.5 C 224 327.6 223.9 327.7 223.9 327.7 C 223.8 327.8 223.7 327.8 223.6 327.8 L 222.9 327.8 C 222.7 327.8 222.6 327.7 222.5 327.7 C 222.4 327.6 222.4 327.4 222.4 327.3 L 222.4 324.3 L 218.2 316.6 C 218.1 316.5 218.1 316.4 218.1 316.3 C 218.1 316.2 218.2 316.1 218.3 316 L 220.8 313.4 C 220.8 313.4 220.9 313.3 221 313.3 C 221 313.3 221.1 313.3 221.2 313.3 L 225.2 313.6 C 225.3 313.6 225.4 313.7 225.5 313.8 C 225.6 313.8 225.6 313.9 225.7 314.1 L 226.7 321.2Z M 247.8 341.2 C 247.8 341.3 247.8 341.4 247.8 341.5 C 247.7 341.6 247.7 341.7 247.6 341.8 L 243.7 344.7 C 243.6 344.8 243.4 344.8 243.3 344.8 C 243.2 344.8 243.1 344.7 243 344.7 L 239.8 341.6 C 239.7 341.5 239.6 341.4 239.6 341.3 C 239.6 341.2 239.6 341.1 239.7 341 L 241.3 338.2 C 241.3 338.1 241.4 338 241.5 338 C 241.7 338 241.8 338 241.9 338 L 247.5 340.9 C 247.6 341 247.7 341.1 247.8 341.2Z M 212.6 355.7 C 212.6 355.6 212.6 355.5 212.6 355.3 C 212.7 355.2 212.7 355.2 212.9 355.1 L 216 353.4 L 218.9 350.6 C 219 350.5 219.1 350.4 219.3 350.4 C 219.4 350.4 219.5 350.5 219.6 350.6 L 221.1 351.8 C 221.2 351.9 221.2 352 221.2 352.2 C 221.2 352.3 221.2 352.4 221.1 352.5 L 218.6 355.6 L 218.6 358.9 C 218.6 359 218.5 359.1 218.4 359.2 C 218.3 359.3 218.2 359.4 218.1 359.4 C 218 359.4 217.9 359.4 217.8 359.3 L 212.8 356 C 212.7 355.9 212.6 355.8 212.6 355.7Z',
	"35":'M 303.8 341.6 C 303.9 341.7 304 341.7 304.1 341.8 C 304.2 341.9 304.2 342 304.2 342.2 L 304 344 L 304 344 L 305.8 346.2 C 305.9 346.2 305.9 346.3 305.9 346.3 C 305.9 346.4 305.9 346.5 305.9 346.6 L 304.6 352.2 C 304.6 352.3 304.5 352.4 304.4 352.5 L 298.4 356.4 C 298.3 356.4 298.2 356.5 298.2 356.5 C 298.1 356.5 298 356.4 297.9 356.4 L 291.7 352.5 C 291.5 352.4 291.5 352.3 291.5 352.2 L 290.2 347.3 C 290.1 347.2 290.1 347.1 290.2 347 C 290.2 346.9 290.3 346.8 290.4 346.8 L 294.6 343.4 L 294.6 340.5 C 294.5 340.4 294.6 340.3 294.6 340.2 C 294.7 340.1 294.8 340.1 294.9 340.1 C 294.9 340 295 340 295.2 340 L 303.8 341.6Z M 370.6 300.5 C 370.7 300.5 370.7 300.6 370.8 300.8 C 370.8 300.9 370.8 301 370.7 301.1 L 369.1 304.6 L 369.1 308.1 C 369.1 308.2 369.1 308.3 369 308.4 C 369 308.5 368.9 308.5 368.9 308.6 L 358.8 314.2 C 358.7 314.3 358.6 314.3 358.5 314.3 L 356 314.3 C 355.8 314.3 355.7 314.3 355.7 314.2 C 355.6 314.1 355.5 314 355.5 313.9 C 355.4 313.8 355.4 313.7 355.5 313.6 L 356.9 310.8 L 356.9 307.2 C 356.9 307.1 356.9 307 356.9 307 C 357 306.9 357 306.8 357.1 306.8 L 364 303.2 C 364 303.2 364.1 303.2 364.2 303.2 C 364.2 303.1 364.3 303.2 364.4 303.2 L 366.9 304.2 L 368.4 299.9 C 368.5 299.8 368.5 299.7 368.6 299.7 C 368.7 299.6 368.8 299.6 368.9 299.5 C 369 299.5 369.1 299.6 369.2 299.6 L 370.6 300.5Z M 356 318.8 L 356.9 324.3 C 356.9 324.4 356.9 324.5 356.9 324.7 L 355.1 327.3 L 355.1 327.4 L 356.6 330.6 C 356.6 330.6 356.6 330.7 356.6 330.8 C 356.6 330.8 356.6 330.9 356.6 331 L 354 336.9 C 354 337 353.9 337.1 353.9 337.1 C 353.8 337.1 353.7 337.2 353.7 337.2 L 345.6 339.3 L 340.9 344.7 C 340.8 344.7 340.7 344.8 340.6 344.8 C 340.5 344.8 340.4 344.8 340.3 344.8 L 336.5 343 C 336.4 342.9 336.3 342.8 336.3 342.7 C 336.3 342.6 336.2 342.5 336.3 342.4 C 336.3 342.3 336.4 342.2 336.5 342.1 C 336.5 342 336.6 342 336.8 342 L 339 342 L 345.1 337.4 L 345.1 334 C 345 333.9 345.1 333.9 345.1 333.8 L 348.2 329 L 351.5 320.4 C 351.6 320.3 351.7 320.2 351.8 320.1 L 355.3 318.4 C 355.4 318.3 355.5 318.3 355.6 318.3 C 355.7 318.4 355.8 318.4 355.9 318.5 C 355.9 318.6 356 318.7 356 318.8Z',
	"52":'M 152.2 337.9 L 159.9 337.9 L 159.9 345.6 L 152.2 345.6 L 152.2 337.9',
	"51":'M 77.5 318.9 L 85.2 318.9 L 85.2 326.6 L 77.5 326.6 L 77.5 318.9',
	"11":'M 55.7 295.8 L 55.7 295.7 L 49 290.1 L 50.4 285.8 L 64.8 281.5 L 85 279.3 L 74.4 294.2 C 74.3 294.2 74.3 294.2 74.3 294.2 C 74.2 294.3 74.2 294.5 74.2 294.8 C 74.2 294.8 74.2 294.9 74.2 294.9 C 74.3 295.2 74.4 295.4 74.5 295.5 L 82.8 303.9 L 74.9 315 L 59.3 307.1 L 54 298.2 L 55.5 297.3 C 55.5 297.3 55.6 297.3 55.6 297.2 C 55.7 297.2 55.8 297 55.9 296.6 C 55.9 296.1 55.9 295.8 55.7 295.8Z',
	"21":'M 19.6 268.4 L 19.6 248.2 L 33.9 234.3 C 46.9 239.3 54.4 242.1 56.2 242.8 L 57.2 248.4 L 49.3 248.4 C 49.2 248.4 49.1 248.4 49.1 248.5 L 48.7 248.7 C 48.7 248.7 48.6 248.7 48.6 248.8 L 44.3 253.6 C 44.2 253.7 44.2 253.7 44.2 253.7 C 44.1 253.9 44.1 254.2 44.3 254.6 C 44.5 255.1 44.8 255.3 45 255.3 L 48.6 255.3 L 48.6 282.8 L 32.8 268.5 C 32.7 268.4 32.6 268.4 32.5 268.4 L 19.6 268.4Z',
	"41":'M 59.3 249.8 C 59.3 249.6 59.4 249.5 59.4 249.4 C 59.4 249.3 59.4 249.3 59.4 249.3 L 58.2 242.7 L 71.8 235.8 L 79.8 256 L 79.8 256 C 79.8 256.2 80 256.4 80.3 256.5 C 80.5 256.6 80.8 256.6 81 256.6 L 81.1 256.6 L 88.4 253.7 L 99.7 268.8 L 86.8 277.1 L 64.6 279.5 C 64.6 279.5 64.5 279.5 64.5 279.5 L 50.6 283.7 L 50.6 254.3 C 50.6 254.1 50.5 253.9 50.3 253.6 C 50 253.3 49.8 253.2 49.6 253.3 L 47.2 253.3 L 49.8 250.4 L 58.4 250.4 C 58.5 250.4 58.7 250.4 58.8 250.3 C 58.9 250.3 58.9 250.3 59 250.2 C 59.1 250.1 59.2 249.9 59.3 249.8Z',
	"29":'M 87.9 278.8 L 101.4 270.1 L 111.1 272.2 L 114.3 281.2 L 114.3 281.2 C 114.3 281.4 114.5 281.6 114.7 281.7 L 114.7 281.7 L 125.3 288 L 108.3 288.3 C 108.2 288.4 108.2 288.4 108.1 288.4 C 108 288.4 108 288.5 107.9 288.5 L 100.5 296.7 L 84.3 302.7 L 76.5 294.7 L 87.9 278.8Z',
	"14":'M 112.3 227.3 L 112.3 227.3 C 112.4 227.4 112.4 227.4 112.5 227.4 L 112.5 248.5 C 112.4 248.7 112.5 248.8 112.5 248.9 C 112.5 249 112.5 249 112.6 249 L 119.6 262.6 L 115.6 262.6 C 115.4 262.7 115.2 262.7 115.1 262.8 C 114.9 262.9 114.7 263 114.7 263.2 L 111.3 270.2 L 101.7 268.1 L 89.6 251.9 L 89.6 251.8 C 89.4 251.7 89.3 251.5 89.1 251.5 C 88.9 251.4 88.6 251.4 88.4 251.5 C 88.4 251.5 88.4 251.5 88.4 251.5 C 88.4 251.6 88.3 251.6 88.3 251.6 L 81.3 254.3 L 73.7 234.9 L 77.3 233.1 C 77.4 233 77.4 232.9 77.5 232.8 L 78.1 231.7 C 78.1 231.6 78.1 231.5 78.1 231.4 L 76.5 224.5 L 92 215 L 92 215 L 92 215 L 112.3 227.3Z',
	"23":'M 166.8 234.5 L 164.3 236.1 L 164.3 236.1 C 164.1 236.2 158.9 242.3 148.5 254.6 L 134.6 254.6 C 134.4 254.6 134.2 254.6 134.1 254.8 L 121.7 262.3 L 114.5 248.3 L 114.5 227.8 L 139.2 227.8 C 139.2 227.8 139.3 227.8 139.3 227.8 L 159.7 222.3 L 163.6 223.8 L 166.8 234.5Z',
	"18":'M 164.7 239.1 L 170.4 241 L 174.5 245.6 L 168.4 257.3 L 160.9 268.9 L 156.8 267.5 C 156.7 267.4 156.4 267.4 156.1 267.5 C 155.7 267.7 155.5 267.8 155.5 268 L 155.5 268 L 147.2 287 L 129 287.9 L 116.1 280.2 L 113 271.4 L 116.2 264.7 L 121.3 264.7 C 121.4 264.7 121.5 264.6 121.7 264.6 C 121.7 264.6 121.7 264.5 121.8 264.5 C 121.8 264.5 121.8 264.5 121.9 264.5 L 134.9 256.6 L 149 256.6 C 149.1 256.6 149.2 256.5 149.4 256.5 C 149.4 256.4 149.5 256.4 149.6 256.3 C 149.6 256.3 149.7 256.3 149.7 256.2 L 164.7 239.1Z',
	"04":'M 176.7 246.6 L 181 246.6 L 179.9 252.7 C 179.8 252.9 179.8 253.1 179.9 253.5 C 180 253.9 180.2 254.1 180.3 254.2 L 191.1 265.1 L 184.1 279.9 L 177.2 288.4 L 174.2 283.8 L 174.1 283.8 C 174 283.5 173.7 283.3 173.3 283.3 L 167 283.3 C 166.9 283.3 166.8 283.3 166.7 283.4 L 166.4 283.6 C 166.3 283.6 166.3 283.6 166.2 283.7 L 161.2 289.1 L 149.3 287.1 L 156.9 269.7 L 160.9 271.1 C 161 271.2 161.4 271.1 161.9 270.9 C 162 270.8 162.1 270.8 162.1 270.7 L 170.1 258.3 C 170.2 258.2 170.2 258.1 170.2 258.1 L 170.2 258 L 170.1 258.3 L 176.7 246.6Z',
	"30":'M 189.6 230.4 C 189.8 230.7 190.1 230.8 190.4 230.9 C 190.4 230.9 190.5 230.9 190.5 230.9 C 190.8 231 191.1 230.9 191.4 230.8 L 191.4 230.8 L 196.1 228.6 C 196.3 228.5 196.4 228.4 196.6 228.2 C 196.6 228.2 196.7 228.1 196.7 228.1 C 196.8 227.9 196.9 227.6 196.9 227.4 L 196.9 227.3 L 197.9 218.2 L 205.8 213.4 L 209.5 216.8 L 206.9 226.8 L 206.9 226.7 C 206.8 227 206.8 227.3 206.9 227.5 L 209.1 237.7 C 209.1 238 209.2 238.2 209.4 238.4 L 209.4 238.4 L 216.1 246.7 C 216.1 246.7 216.1 246.7 216.1 246.7 C 216.1 246.8 216.2 246.8 216.2 246.8 L 215.1 249.5 L 215.1 249.5 C 215 249.6 215 249.8 215 249.9 C 215 250.2 215 250.3 215.2 250.5 L 217.7 253.9 L 203.1 255.4 C 202.9 255.5 202.7 255.5 202.6 255.6 L 193 262.8 L 183 252.6 L 184.3 245.4 L 184.3 245.3 C 184.3 245.1 184.3 244.8 184.2 244.5 C 184.2 244.5 184.1 244.4 184.1 244.4 C 184 244.2 183.8 244 183.6 243.9 C 183.3 243.6 183.1 243.5 182.8 243.6 L 176.6 243.6 L 173.2 239.6 L 177.9 232.9 L 188.2 228.6 L 189.6 230.4Z',
	"02":'M 206.1 207.4 C 206.1 207.4 206.1 207.4 206.1 207.4 C 206.3 207.5 206.5 207.6 206.7 207.5 L 211.2 207.5 L 211.2 210.7 L 210.4 213.5 L 207.1 210.5 L 207.1 210.5 C 206.9 210.3 206.6 210.1 206.2 210 C 205.9 210 205.6 210.1 205.3 210.3 L 205.3 210.3 L 195.7 216 L 195.7 216 C 195.5 216 195.4 216.2 195.2 216.4 C 195 216.6 195 216.8 194.9 217.1 L 194.9 217.2 L 194 226.3 L 191.2 227.6 L 189.8 225.9 L 189.8 225.9 C 189.6 225.6 189.3 225.4 189 225.4 C 188.7 225.3 188.4 225.3 188.1 225.5 L 188.1 225.5 L 175.9 230.7 C 175.9 230.7 175.8 230.7 175.7 230.8 L 170.6 238 L 168.2 237.2 L 169.4 236.4 C 169.7 236.2 169.9 236 170 235.7 C 170.1 235.4 170.1 235.1 170 234.7 L 170 234.7 L 166.2 222.2 L 166.2 222.2 C 166.1 222 166 221.8 165.9 221.7 C 165.7 221.4 165.6 221.3 165.3 221.3 C 165.3 221.2 165.3 221.2 165.3 221.2 L 161.3 219.6 L 163.4 213.7 C 163.5 213.6 163.5 213.5 163.4 213.4 L 159.9 192.1 L 167.3 190.7 L 172 195.3 C 172.1 195.4 172.2 195.4 172.3 195.5 C 172.4 195.5 172.5 195.6 172.5 195.6 C 172.6 195.6 172.7 195.6 172.8 195.6 C 172.8 195.6 172.8 195.6 172.9 195.6 L 188.2 193.2 C 188.3 193.1 188.4 193.1 188.5 193.1 L 188.5 193 L 195.2 189.2 C 195.3 189.3 195.4 189.3 195.5 189.4 C 195.5 189.4 195.5 189.4 195.5 189.4 L 203.6 192.9 L 200.9 199.8 C 200.7 200.1 200.7 200.3 200.8 200.6 C 200.8 200.8 200.9 201.1 201.1 201.3 L 205.5 207 C 205.6 207.1 205.8 207.3 206.1 207.4Z',
	"13":'M 105.1 186.7 L 105 187 L 108.5 183 L 119.2 183 L 119.2 185.5 L 117 189.3 L 117 189.3 C 116.9 189.4 116.9 189.7 117 190.1 C 117 190.1 117 190.1 117.1 190.1 C 117.2 190.4 117.3 190.6 117.4 190.6 C 117.4 190.7 117.5 190.7 117.5 190.7 C 124.1 193.2 127.5 194.4 127.8 194.3 L 127.7 194.3 L 142.7 186.5 L 153.1 186.5 L 157.8 191.7 L 161.4 213.4 C 159.8 217.3 159 219.3 159 219.3 L 138.8 224.8 L 113.9 224.8 L 93.8 212.6 L 101.3 192 C 103.6 189.1 104.8 187.3 105.1 186.7Z',
	"06":'M 35 199.9 C 35.1 199.8 35.1 199.7 35.1 199.6 C 35.1 199.4 35.1 199.3 35 199.3 L 28.5 190.4 L 38.8 187.7 L 38.8 193.9 C 38.8 194 38.9 194.2 39.1 194.4 C 39.2 194.6 39.4 194.8 39.5 194.8 C 39.5 194.8 39.5 194.8 39.6 194.8 L 63 200.3 C 63.1 200.3 63.2 200.3 63.3 200.3 L 93.8 189.3 C 93.9 189.3 93.9 189.3 94 189.3 C 94 189.3 94 189.3 94.1 189.4 C 94.4 189.6 94.7 189.6 94.9 189.6 L 100.2 188.8 L 98.6 190.6 C 98.6 190.6 98.5 190.7 98.5 190.7 L 90.7 212.3 L 74.1 222.5 C 74 222.6 73.9 222.7 73.8 222.8 L 73.4 223.9 C 73.3 223.9 73.3 224 73.4 224.2 L 74.9 230.9 L 56.9 240 L 35 231.6 L 35.1 231.7 C 34.9 231.6 33.5 231.2 30.8 230.5 L 24.4 223 L 25.6 211.8 L 35 199.9Z',
	"10":'M 67.7 155.8 C 67.7 155.8 67.8 155.8 67.9 155.7 L 72.2 154 L 82.4 161.2 L 81.3 167.8 C 81.2 167.8 81.2 167.9 81.3 167.9 L 81.4 168.6 C 81.4 168.6 81.4 168.7 81.4 168.8 L 92 187.8 L 62.8 198.3 L 40.8 193.1 L 40.8 186.4 C 40.8 186.1 40.7 186 40.6 185.8 C 40.5 185.6 40.4 185.5 40.2 185.5 C 40.2 185.4 40.2 185.4 40.2 185.4 C 40 185.4 39.8 185.4 39.6 185.4 L 27.4 188.7 L 21.7 176.2 L 35.1 176.2 C 35.4 176.2 35.6 176.1 35.8 175.9 C 36 175.7 36.1 175.4 36.1 175.2 L 36.1 156.1 L 39.5 154.4 C 39.8 154.5 40.1 154.6 40.4 154.6 L 48.7 154.6 C 48.8 154.6 48.8 154.6 48.9 154.6 L 49.5 154.3 C 49.6 154.3 49.6 154.3 49.7 154.2 L 57.7 147.3 L 66.4 155.4 C 66.4 155.5 66.5 155.5 66.6 155.6 L 67.7 155.8Z',
	"45":'M 97.5 160.5 C 97.6 160.5 97.6 160.4 97.7 160.4 L 101.8 156 L 104 158 C 104.1 158 104.1 158 104.1 158.1 L 105.8 159.7 C 105.8 159.8 105.9 159.8 106 159.8 L 107 160.1 C 107.1 160.1 107.2 160.1 107.3 160.1 L 116.8 156.8 L 131.1 161.7 L 124.4 167.3 C 124.3 167.4 124.3 167.4 124.3 167.5 C 124.2 167.6 124.2 167.6 124.2 167.7 L 124.2 169.2 C 124.2 169.3 124.2 169.3 124.3 169.4 C 124.3 169.5 124.3 169.5 124.4 169.6 L 126.2 171.2 C 126.2 171.2 126.3 171.3 126.4 171.3 L 127.6 171.5 C 127.7 171.5 127.8 171.4 127.9 171.4 L 141.8 164.1 L 146.3 164.1 L 147.6 170.8 C 147.6 170.8 147.6 170.8 147.6 170.9 C 147.6 170.9 147.7 171 147.7 171.1 C 147.7 171.1 147.7 171.1 147.8 171.1 L 153.4 179.3 L 152.6 184.6 L 142.4 184.6 C 142.3 184.5 142.1 184.6 142 184.7 L 127.2 192.4 L 119.3 189.3 L 121.1 186.3 L 121 186.3 C 121.1 186 121.2 184.6 121.2 182 C 121.2 181.8 121.1 181.6 120.9 181.3 C 120.6 181 120.4 180.9 120.2 181 L 108.1 181 C 108 181 107.9 181 107.8 181 L 107.5 181.2 C 107.4 181.3 107.4 181.3 107.3 181.3 L 103.7 185.5 C 102.9 185.3 102.5 185.3 102.3 185.4 L 102.3 185.4 L 94.7 186.5 L 84.3 167.8 L 85.3 161.9 L 96.7 160.9 C 96.8 160.8 96.8 160.8 96.9 160.8 L 97.5 160.5Z',
	"37":'M 68.5 121.4 C 68.6 121.3 68.7 121.1 68.7 121 L 69.7 117.7 L 85.9 120.9 C 85.9 120.9 86 120.9 86 120.9 L 86 120.9 L 88.8 121.3 L 88.8 131.3 L 78.4 141 L 78.4 141.1 C 78.3 141.1 78.2 141.2 78.2 141.3 C 78.1 141.5 78 141.6 78.1 141.8 L 78.1 146.4 L 72.1 151.2 C 72 151.2 71.9 151.2 71.9 151.2 C 71.5 151.1 71.2 151.1 71.1 151.2 L 67.7 152.6 L 58.8 144.2 C 58.7 144.1 58.6 144.1 58.5 144.1 L 57.1 144.1 C 57 144 56.9 144.1 56.8 144.2 L 48.2 151.6 L 41.3 151.6 L 43.3 144.3 C 43.3 144.3 43.3 144.2 43.4 144.2 C 43.4 144.2 43.4 144.1 43.4 144.1 L 43.4 131.9 C 43.4 131.8 43.4 131.7 43.4 131.7 C 43.4 131.6 43.3 131.6 43.3 131.5 L 40.7 124.9 L 42.2 124.9 C 42.4 124.9 42.6 124.8 42.8 124.7 C 42.8 124.7 42.8 124.7 42.8 124.7 L 53.8 115.5 L 67.4 121.6 C 67.4 121.6 67.4 121.6 67.4 121.6 C 67.6 121.6 67.7 121.7 67.9 121.7 C 67.9 121.7 68 121.6 68.1 121.6 C 68.1 121.6 68.2 121.6 68.3 121.5 C 68.3 121.5 68.4 121.5 68.5 121.4Z',
	"05":'M 90.7 132.1 C 90.7 132 90.8 131.8 90.8 131.7 L 90.8 121.6 L 103.1 123.3 L 115.2 139.1 L 104.8 154.6 L 102.8 152.7 C 102.7 152.7 102.6 152.6 102.6 152.6 C 102.5 152.6 102.4 152.6 102.4 152.6 L 101 152.7 C 100.8 152.7 100.7 152.8 100.6 152.9 L 95.9 157.9 L 84.4 159 L 74.4 152 L 79.7 147.6 C 79.8 147.6 79.8 147.5 79.9 147.4 L 79.9 147.4 C 79.9 147.3 79.9 147.3 80 147.2 C 80 147 80.1 146.9 80.1 146.8 L 80.1 142.2 L 90.5 132.5 C 90.5 132.4 90.5 132.4 90.6 132.3 C 90.6 132.3 90.6 132.2 90.7 132.1Z',
	"40":'M 122.9 110.4 C 122.9 110.4 122.9 110.4 122.9 110.4 L 136.9 106.8 L 144.3 115.6 L 135.2 120.5 C 135.2 120.5 135.1 120.5 135.1 120.6 L 116.6 137.6 L 104.8 122.3 L 110.7 112.5 L 122.9 110.4Z',
	"28":'M 135.3 133.8 L 135.3 134.9 C 135.3 135 135.3 135.1 135.4 135.2 L 146.4 150.8 L 148.2 161.1 L 141.5 161.1 C 141.4 161.1 141.3 161.1 141.3 161.1 L 140.9 161.2 C 140.8 161.2 140.8 161.2 140.8 161.3 L 128.9 167.5 L 135.1 162.2 C 135.1 162.2 135.2 162.1 135.2 162 C 135.3 161.9 135.3 161.9 135.3 161.8 L 135 160.1 C 134.9 160 134.9 159.9 134.8 159.8 C 134.8 159.8 134.7 159.7 134.6 159.7 L 117.3 153.8 C 117.3 153.8 117.2 153.8 117.2 153.8 L 116.5 153.8 C 116.4 153.7 116.4 153.8 116.3 153.8 L 107.2 156.9 L 107 156.7 L 117.7 140.7 C 117.7 140.7 117.7 140.7 117.8 140.7 C 117.8 140.6 117.8 140.4 117.9 140.3 L 136 123.8 L 139 127.2 L 135.3 133.6 C 135.3 133.6 135.2 133.7 135.3 133.8Z',
	"47":'M 83.7 88.5 L 86.8 81.3 L 94.6 79.4 L 94.6 92.9 C 94.6 93 94.7 93.2 94.8 93.4 C 94.9 93.6 95.1 93.8 95.4 93.8 L 120.7 99.9 L 121.6 108.6 L 109.9 110.6 C 109.9 110.6 109.9 110.6 109.9 110.6 C 109.7 110.7 109.6 110.7 109.6 110.8 L 109.6 110.8 L 109.5 110.8 C 109.4 110.9 109.3 111 109.2 111.1 L 109.2 111.1 L 103.1 121.3 L 87.1 119 L 87.1 106.5 C 87.1 106.4 87.1 106.4 87.1 106.4 C 87.1 106.3 87.1 106.3 87.1 106.3 L 83.7 88.5Z',
	"03":'M 239.3 207.7 L 243.8 208.8 L 245.9 211.7 L 224.8 227.2 C 224.7 227.2 224.7 227.2 224.7 227.3 C 224.6 227.4 224.5 227.5 224.5 227.6 L 224.5 227.6 L 217.5 243.7 L 211.9 236.8 L 209.9 227.2 L 213.9 211.9 L 222.3 214.6 L 222.3 214.6 C 222.6 214.7 222.9 214.7 223.1 214.5 L 239.3 207.7Z',
	"46":'M 198.4 161.4 L 201.3 159.7 L 205.1 161.8 L 204.9 163.4 L 199.2 163.4 L 198.4 161.4Z M 231.4 193.5 C 231.4 193.6 231.4 193.7 231.5 193.9 C 231.5 193.9 231.5 194 231.5 194 L 237.8 206.2 L 222.6 212.6 L 214.2 210 L 214.2 206.1 C 214.2 205.7 214.1 205.3 213.8 205 C 213.5 204.7 213.1 204.5 212.7 204.6 L 207.5 204.6 L 204 200.1 L 207 192.6 C 207.1 192.2 207.1 191.9 207 191.5 L 207 191.5 C 206.8 191.1 206.5 190.8 206.2 190.7 L 197.5 187 L 199.2 180.1 L 202.4 178.6 C 202.6 178.5 202.8 178.4 202.9 178.3 C 202.9 178.2 203 178.2 203 178.1 C 203.1 178 203.1 177.9 203.2 177.7 C 203.2 177.7 203.2 177.7 203.2 177.6 L 205.7 168 L 206.4 167.9 L 206.5 167.9 C 206.5 167.9 206.5 167.9 206.5 167.9 L 214.2 166.9 C 214.2 166.9 214.3 166.9 214.3 166.9 L 218.3 173.3 C 218.3 173.3 218.4 173.3 218.4 173.4 C 218.4 173.4 218.5 173.4 218.5 173.5 C 218.6 173.6 218.8 173.7 219 173.7 L 232.8 175.6 L 231.4 193.5 L 231.4 193.5Z',
	"12":'M 233.8 135.9 L 244.2 137.2 L 251.8 144.2 L 233.3 173.6 L 219.8 171.8 L 216.2 165.8 L 231 152.1 C 231 152.1 231 152 231 152 C 231.1 151.8 231.2 151.6 231.3 151.4 L 231.3 151.4 C 231.4 151.1 231.5 150.8 231.4 150.6 L 231.4 150.6 L 228.9 140.4 L 233.8 135.9Z',
	"44":'M 233.5 132.8 C 233.5 132.8 233.4 132.8 233.4 132.8 C 232.8 132.8 232.5 132.9 232.3 133.2 L 226.2 138.8 C 226.1 138.8 225.9 139.1 225.8 139.5 L 225.8 139.5 C 225.7 139.9 225.6 140.2 225.8 140.4 L 228.3 150.5 L 213.9 163.9 L 213.8 163.9 L 207.8 164.7 L 208.3 161.2 C 208.3 160.8 208.2 160.5 208.1 160.3 L 208.1 160.3 C 207.9 160 207.7 159.8 207.5 159.7 C 207.5 159.6 207.4 159.6 207.4 159.6 L 202 156.7 L 202 156.7 C 201.8 156.6 201.5 156.5 201.2 156.5 C 201 156.5 200.7 156.6 200.5 156.7 L 196.8 158.8 L 188 150 L 195.3 144.6 C 195.4 144.5 195.4 144.4 195.5 144.4 C 195.5 144.3 195.5 144.2 195.5 144.1 L 194.6 131.7 L 207.6 122.4 L 222.2 122.4 C 222.3 122.4 222.4 122.4 222.5 122.3 C 222.5 122.3 222.6 122.2 222.7 122.2 L 226.5 115.7 L 241.7 123.5 L 243.1 134 L 233.5 132.8Z',
	"50":'M 226.2 113.3 C 226.1 113.2 225.9 113.2 225.8 113.3 C 225.7 113.3 225.6 113.4 225.5 113.5 L 221.4 120.4 L 207.2 120.4 C 207 120.4 206.9 120.4 206.8 120.5 L 193.5 130 L 181.7 120.9 L 175.5 112.6 L 176.1 112.3 L 178.9 114.2 C 179 114.2 179.1 114.3 179.2 114.3 L 183.1 114.3 C 183.2 114.3 183.3 114.2 183.4 114.2 C 183.5 114.1 183.5 114 183.6 113.9 C 183.6 113.8 183.6 113.7 183.6 113.7 L 181.8 105.2 L 187.3 100.4 C 187.4 100.3 187.4 100.3 187.5 100.2 C 187.5 100.1 187.5 100 187.5 100 L 186.5 92.1 L 195.8 94.9 C 196 95 196.1 95 196.2 94.9 C 196.3 94.9 196.4 94.8 196.4 94.7 L 200.9 87.7 C 201 87.6 201 87.5 201 87.4 C 201 87.3 201 87.2 200.9 87.2 L 198.3 83.6 L 202.2 70.3 L 208.8 64.8 L 215.7 79 L 215.7 90.1 C 215.7 90.2 215.7 90.3 215.7 90.3 C 215.8 90.4 215.8 90.5 215.9 90.5 L 233.1 105.6 L 237.2 113.4 C 237.2 113.4 237.3 113.5 237.4 113.6 C 237.5 113.6 237.6 113.6 237.7 113.6 L 245.5 113 L 246.5 115.4 L 242.3 121.8 L 226.2 113.3Z',
	"19":'M 141.9 126.1 L 138.5 122.2 L 146.5 117.8 C 146.5 117.8 146.6 117.7 146.6 117.7 L 159.2 118.7 L 168.3 127.3 C 168.4 127.3 168.5 127.4 168.6 127.4 C 168.6 127.4 168.7 127.4 168.8 127.4 L 180.3 123.6 L 191.7 132.4 L 192.4 143 L 185.6 148 L 178.2 139.5 L 178.2 139.5 C 178 139.3 177.8 139.2 177.7 139.2 C 177.4 139.1 177.2 139.1 176.9 139.3 L 177 139.3 L 158.9 147.4 L 158.9 147.4 C 158.8 147.4 158.7 147.5 158.6 147.6 C 158.4 147.7 158.3 147.9 158.3 148.1 L 156.9 156.7 L 150.9 159.2 L 149.3 150 C 149.3 149.9 149.3 149.9 149.3 149.9 L 149.1 149.5 C 149.1 149.4 149.1 149.4 149.1 149.4 L 138.4 134.2 L 142.1 127.8 C 142.1 127.7 142.2 127.6 142.2 127.5 L 142 126.3 C 142 126.2 141.9 126.1 141.9 126.1Z',
	"16":'M 151.4 162.5 C 151.4 162.5 151.4 162.4 151.4 162.3 L 151.2 161.2 L 158.2 158.3 L 158.2 158.3 C 158.3 158.2 158.4 158.1 158.6 158 C 158.7 157.8 158.8 157.7 158.8 157.5 L 160.2 148.9 L 177.2 141.4 L 184.3 149.5 L 184.3 149.6 C 184.2 149.8 184.4 150.2 184.8 150.7 C 185 151.1 185.2 151.4 185.4 151.6 L 195.3 161.5 L 196.7 165.4 L 196.7 165.4 C 196.8 165.6 197 165.9 197.3 166.1 C 197.3 166.1 197.3 166.1 197.3 166.1 C 197.5 166.3 197.8 166.3 198.1 166.4 L 203.1 166.4 L 200.5 176.2 L 197.3 177.7 C 197.1 177.8 196.9 178 196.8 178.1 C 196.6 178.3 196.6 178.5 196.5 178.7 L 194.4 187 L 194.4 187 C 194.3 187.1 194.3 187.3 194.3 187.5 L 187.8 191.2 L 173 193.5 L 168.3 188.9 C 168.2 188.8 168.2 188.8 168.1 188.8 L 167.7 188.6 C 167.6 188.6 167.5 188.6 167.4 188.6 L 159.1 190.1 L 154.6 185.2 L 155.5 179.3 C 155.5 179.3 155.5 179.2 155.5 179.2 C 155.5 179.1 153.5 176.1 149.5 170.2 L 148.4 164.1 L 149.9 164.1 C 150 164 150 164 150.1 164 C 150.2 164 150.2 163.9 150.3 163.9 L 151.3 162.7 C 151.3 162.7 151.4 162.6 151.4 162.5Z',
	"42":'M 168.7 86 L 175 86.8 L 176.3 93.3 C 176.4 93.3 176.4 93.4 176.5 93.5 C 176.5 93.6 176.6 93.6 176.7 93.6 C 176.8 93.7 176.9 93.7 177 93.6 L 183.5 91.9 L 184.4 99 L 178.7 103.9 C 178.7 104 178.6 104.1 178.6 104.2 C 178.5 104.2 178.5 104.3 178.6 104.4 L 180 111.3 L 179.9 111.3 L 176.8 109.1 C 176.7 109.1 176.6 109.1 176.6 109.1 C 176.5 109 176.4 109 176.3 109.1 L 171.3 110.8 C 171.2 110.9 171.2 110.9 171.1 111 C 171 111.1 171 111.2 171 111.3 C 171 111.4 171 111.5 171.1 111.6 L 178.2 121.2 L 169.3 124.1 L 160.6 115.9 C 160.5 115.8 160.4 115.8 160.3 115.8 L 146.9 114.7 L 146.8 114.7 C 146.6 114.7 146.5 114.7 146.4 114.8 L 138.5 105.6 L 144.3 95.5 L 146.8 98.6 L 146.9 98.6 C 146.9 98.8 147.2 98.8 147.7 98.8 C 148.1 98.7 148.3 98.7 148.4 98.6 C 148.4 98.5 148.4 98.5 148.4 98.5 L 153.6 90.7 C 153.7 90.7 153.8 90.8 153.9 90.8 L 163.8 90.8 C 163.9 90.7 164.1 90.7 164.2 90.6 L 168.7 86Z',
	"26":'M 154.5 66.3 C 154.5 66.3 154.5 66.3 154.6 66.3 L 155.8 69 C 155.8 69.1 155.9 69.1 155.9 69.2 L 156.6 69.8 C 156.6 69.8 156.7 69.9 156.8 69.9 L 176.8 75.5 L 186.4 82.5 L 181.4 89.1 C 181.3 89.1 181.3 89.2 181.3 89.3 C 181.2 89.3 181.2 89.4 181.3 89.4 L 178.8 90.1 L 177.6 84.5 C 177.6 84.3 177.5 84.3 177.5 84.2 C 177.4 84.1 177.3 84.1 177.2 84.1 L 167.9 82.9 C 167.9 82.8 167.8 82.8 167.7 82.9 C 167.6 82.9 167.6 82.9 167.5 83 L 162.8 87.8 L 154.1 87.8 L 148.8 80.9 L 149.7 67.5 L 154.4 66.3 L 154.5 66.3Z',
	"43":'M 267.7 108.5 L 276.3 103.9 L 283.1 115.7 L 266.8 121.9 C 266.7 121.9 266.6 122 266.6 122 L 257.7 132.5 C 257.5 132.5 257.4 132.8 257.5 133.2 C 257.6 133.6 257.6 133.8 257.8 133.9 C 257.8 133.9 257.8 133.9 257.8 133.9 L 261.3 136.4 L 253.8 142 L 246.3 135.1 L 245 122.9 L 249.2 116.9 L 249.2 116.9 C 249.3 116.7 249.4 116.5 249.5 116.3 L 262.6 113.2 C 262.7 113.2 262.7 113.2 262.7 113.2 C 262.8 113.1 262.9 113.1 263.1 113 L 267.7 108.5Z',
	"canaries":'M 191.2 360.9 L 191.2 316.2 L 223.8 283.6 L 377.3 283.6 L 191.2 360.9'
};

var FUEL_OPTIONS = {"1": {"short": "G95", "name": "Gasolina 95"},
				"3": {"short": "G98", "name": "Gasolina 98"},
				"4": {"short": "GOA", "name": "Gasóleo Automoción"},
				"5": {"short": "NGO", "name": "Nuevo Gasóleo A"},
				"6": {"short": "GOB", "name": "Gasóleo B"},
				"7": {"short": "GOC", "name": "Gasóleo C"},
				"8": {"short": "BIOD", "name": "Biodiésel"}};
var CHART_OPTIONS = [
	{id: "G98", color: "#339933", name: "Gasolina 98"},
	{id: "G95", color: "#006633", name: "Gasolina 95"},
	{id: "NGO", color: "#aaa", name: "Nuevo Gasóleo A"},
	{id: "BIOD", color: "#f1aa41", name: "Biodiésel"},
	{id: "GOA", color: "#000", name: "Gasóleo Automoción"},
	{id: "GOC", color: "#FF3300", name: "Gasóleo C"},
	{id: "GOB", color: "#CC3333", name: "Gasóleo B"}];

var PROVS = {
	"Álava": "01",
	"Albacete": "02",
	"Alicante": "03",
	"Almería": "04",
	"Asturias": "33",
	"Ávila": "05",
	"Badajoz": "06",
	"Balears (Illes)": "07",
	"Barcelona": "08",
	"Burgos": "09",
	"Cáceres": "10",
	"Cádiz": "11",
	"Cantabria": "39",
	"Castellón / Castelló": "12",
	"Ceuta": "51",
	"Ciudad Real": "13",
	"Córdoba": "14",
	"Coruña (A)": "15",
	"Cuenca": "16",
	"Girona": "17",
	"Granada": "18",
	"Guadalajara": "19",
	"Guipúzcoa": "20",
	"Huelva": "21",
	"Huesca": "22",
	"Jaén": "23",
	"León": "24",
	"Lleida": "25",
	"Lugo": "27",
	"Madrid": "28",
	"Málaga": "29",
	"Melilla": "52",
	"Murcia": "30",
	"Navarra": "31",
	"Ourense": "32",
	"Palencia": "34",
	"Palmas (Las)": "35",
	"Pontevedra": "36",
	"Rioja (La)": "26",
	"Salamanca": "37",
	"Santa Cruz De Tenerife": "38",
	"Segovia": "40",
	"Sevilla": "41",
	"Soria": "42",
	"Tarragona": "43",
	"Teruel": "44",
	"Toledo": "45",
	"Valencia / València": "46",
	"Valladolid": "47",
	"Vizcaya": "48",
	"Zamora": "49",
	"Zaragoza": "50"};

// Meses del año
var MONTHS = ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"];

// Colores de precio mínimo, máximo y medio de un resultado
var COLORS = {
	stroke: "#fff",
	min: "#36AE34",
	max: "#f00",
	mu: "#3399CC"
}

var LS_EXPIRE = 3600000;				// Expiración de localStorage, 1 hora

// Para agregar eventos 
function addEvent(el, evnt, func) {
	if(el.addEventListener) {
		el.addEventListener(evnt, func, false);
	} else if(el.attachEvent) {
		el.attachEvent('on'+evnt, func);
	}
}

// ie8
// getelementsbyclassname 
// http://stackoverflow.com/questions/9568969/getelementsbyclassname-ie8-object-doesnt-support-this-property-or-method
function getAllElementsByClassName(obj,cn){
    if(document.getElementsByClassName) // Returns NodeList here
        return obj.getElementsByClassName(cn);
    // IE8-
    cn = cn.replace(/ *$/, '');
    if(document.querySelectorAll) // Returns NodeList here
        return obj.querySelectorAll((' ' + cn).replace(/ +/g, '.'));
        
}



/* Bloqueo de scroll en el body cuando se hace scroll en un elemento */
function lockScroll(id) {
	if (typeof id=="string") id = document.getElementById(id);
	addEvent(id,"mouseover", function() {document.body.style.overflow = "hidden";})
	addEvent(id,"mouseout", function() {document.body.style.overflow = "auto";})
}

/* Lista de provincias para incluir en un div de ID dado, un acción a ejecutar en el click.
Si el callback es null se agrega un enlace a la página de la provincia */
function initProvLinks(id, callback) {
	var place = document.getElementById(id);
	for (var p in PROVS) {
		var li = document.createElement("li");
		li.id = "plist-"+PROVS[p];
		if (callback) {
			li.textContent = p;
			li.onclick = callback;
		} else {
			var a = document.createElement("a");
			a.title = "Todas las gasolineras de "+p;
			a.textContent = p;
			a.href = "/gasolineras/"+encodeName(p);
			li.appendChild(a);	
		}
		place.appendChild(li);
	}
	lockScroll(place);		// Además se bloquea en scroll de la página
}

/* Obtener nombre de provincia a partir de id */
function getProvName(id) {for (k in PROVS) if (PROVS[k] == id) return k;}

/* Elimina el etiquetado HTML de un texto para su envío al servidor */
function clearHtmlTags(s) {return s.replace(/(<([^>]+)>)/ig,"")}
/* Elimina errores y uniformiza nombres de direcciones de gasolineras */
function toTitle(s) {
	return s.replace(" [N]", "")
		.replace(/^CARRETERA ?|^CR\.? ?/i, "CTRA. ")
		.replace(/(CTRA. )+/i, "CTRA. ")
		.replace(/^AVENIDA ?|^AV. ?/i, "AVDA. ")
		.replace(/^POLIGONO INDUSTRIAL ?|POLIGONO ?|P\.I\. ?/i, "POL. IND. ")
		.replace(/^CALLE |^CL\.? ?|C\/ ?/i, "C/ ")
		.replace(/^RONDA |^RD /i, "RDA. ")
		.replace(/^AUTOPISTA (AUTOPISTA ?)?/i, "AU. ")
		.replace(/^PLAZA ?/i, "PL. ")
		.replace(/^PASEO (PASEO ?)?/i, "Pº ")
		.replace(/^TRAVESS?[IÍ]A /i, "TRAV. ")
		.replace(/^V[ií]A (V[IÍ]A )?/i, "VÍA ")
		.replace(/\B[^\d- ]+[ $]/g, function(t) {return t.toLowerCase()})
		.replace(/\b[NAE]-.+\b/, function(t) {return t.toUpperCase()})
		.replace(/\[D\]$/, "(m.d.)")
		.replace(/\[I\]$/, "(m.i.)")
		.replace(/ \[N\]$/, "")
}

/* Obtiene el identificador correspondiente a una etiqueta de gasolinera */
function getLogo(label) {
	if (label) {
		/* Algunos errores del archivo del Ministerio */
		label = label.replace(/camspa/i, "campsa");
		var logo = label.match(/\b(abycer|agla|alcampo|andamur|a\.?n\.? energeticos|avia|bonarea|b\.?p\.?|buquerin|campsa|carmoned|carrefour|cepsa|empresoil|eroski|esclatoil|galp|gasolben|iberdoex|leclerc|makro|meroil|norpetrol|petrem|petrocat|petromiralles|petronor|ramell|repostar|repsol|saras|shell|simply|staroil|tamoil|valcarce)\b/i);
		if (logo) return logo[0].replace(/\./g, "").replace(/ /g, "_").toLowerCase();	
	}
	return null;
}

/* Decodifica un nombre de url a representación humana */
function decodeName(s) {
	// return decodeURI(s);
	return decodeURI(s).replace(/_/g, " ").replace(/\|/g, "/");
}
/* Decodifica un array de nombres url a nombre legible */
function decodeArray(a) {
	for (var n=0; n<a.length; n++) a[n]=decodeName(a[n]); return a;
}
/* Codifica un nombre para utilizar en una url */
function encodeName(s) {
	// return encodeURI(s);
	return encodeURI(s.replace(/\//g, "|").replace(/ /g, "_"));
}

/* Hace que un nombre sea más bonito para representación en pantalla */
function prettyName(s) {
	if (s.match("/")) {
		 s = s.split("/")[1]; // dos idiomas
	}
	if (s.match(/\)$/)) {
		s = s.match(/\(.+\)$/g)[0]
			.replace("(", "").replace(")", " ") + s.split(" (")[0];
	}
	return s;
}

/* Comprueba si existe almacenamiento local en el navegador */
function checkLocalStorage() {
	try {
		return 'localStorage' in window && window['localStorage'] !== null;
	} catch (e) {
		return false;
	}
}

/* Clave de la página actual, para guardado o recuperación de LocalStorage */
function getKey() {return window.location.pathname.split("/").slice(1).join("*");}

/* Obtención de datos de la api a partir de la url de la página actual */
function getApiData(option, callback, reload) {
	if (typeof reload == "undefined") reload=false;
	var key = option+"*"+getKey();
	var ts = new Date().getTime();
	if (checkLocalStorage()) {
		var localData = localStorage[key];
		if (localData) {
			localData = JSON.parse(localData);
			if (((ts-localData.ts)>LS_EXPIRE) || reload)
				localStorage.removeItem(key);
			else {callback(localData.data); return;};
		}
	}
	var req = new XMLHttpRequest();
	req.onreadystatechange = function(r) {
		if ((this.readyState==4)&&(this.status==200)) {
			var info = JSON.parse(this.responseText);
			if (checkLocalStorage())
				localStorage.setItem(key, JSON.stringify(
					{"ts": ts, "data": info}));
			callback(info);
		}
	};
	var url = "api/";
	if 		(option=="history") 	url+="h";
	else if (option=="comments") 	url+="c";
	var current = window.location.pathname.split("/")[1];
	req.open("GET", document.URL.replace(current, url));
	req.send();
}

/****************************/
/* FUNCIONES GEOMETRICAS ****/
/****************************/

/* Distancia entre dos puntos */
function distance(a,b,r) {
	var dlat = Math.abs(a[0]-b[0])*Lat2Km;
	if (dlat<r) {
		var dlon = Math.abs(a[1]-b[1])*Lon2Km;
		if (dlon<r) {
			var dist = Math.sqrt(dlat*dlat+dlon*dlon);
			if (dist<r) return dist;
		}
	}
	return false;
}

// Distancia de un punto a una recta
// function distanceOrto(p, p1,p2) {
// 	// if start and end point are on the same x the distance is the difference in X.
// 	if (p1.lng()==p2.lng()) return Math.abs(p.lat()-p1.lat());
// 	else {
// 		var slope = (p2.lat() - p1.lat())/(p2.lng() - p1.lng());
// 		var intercept = p1.lat()-(slope*p1.lng());
// 		return Math.abs(slope*p.lng()-p.lat()+intercept)/Math.sqrt(slope*slope+1);
// 	}
// }

function distanceOrto(p,a,b,r)  {
	// http://www.matematicas.unam.mx/gfgf/ga20071/data/lecturas/lectura13a.pdf
	var u = [b[0]-a[0], b[1]-a[1]],	// vector del segmento
		norm_u_2 = u[0]*u[0]+u[1]*u[1],
		ap = [p[0]-a[0],p[1]-a[1]],
		t = (ap[0]*u[0]+ap[1]+u[1])/norm_u_2;
	if (t<=0) return distance(p,a,r);
	else if (t>=1) return distance(p,b,r);
	else {
		var v = [(a[0]+t*u[0]-p[0])*Lat2Km, (a[1]+t*u[1]-p[1])*Lon2Km],
			dseg = Math.sqrt(v[0]*v[0] + v[1]*v[1]);
		// var d = Math.abs((ap[0]*u[1]-ap[1]*u[0]) / Math.sqrt(norm_u_2));
		return (dseg<r);
	}
}
// Ramer–Douglas–Peucker algorithm
// http://karthaus.nl/rdp/js/rdp.js
// function properRDP(points,epsilon){
// 	if (typeof(epsilon)=="undefined") epsilon = 1*Km2LL;
// 	var firstPoint=points[0];
// 	var lastPoint=points[points.length-1];
// 	if (points.length<3){
// 		return points;
// 	}
// 	var index=-1;
// 	var dist=0;
// 	for (var i=1;i<points.length-1;i++){
// 		var cDist=distanceOrto(points[i],firstPoint,lastPoint);
// 		if (cDist>dist){
// 			dist=cDist;
// 			index=i;
// 		}
// 	}
// 	if (dist>epsilon){
// 		var l1=points.slice(0, index+1);
// 		var l2=points.slice(index);
// 		var r1=properRDP(l1,epsilon);
// 		var r2=properRDP(l2,epsilon);
// 		// concat r2 to r1 minus the end/startpoint that will be the same
// 		 return r1.slice(0,r1.length-1).concat(r2);
// 	} else return [firstPoint,lastPoint];
// }

/********************/
/* EL OBJETO GASOLE */
/********************/

/** @constructor */
function SearchLocations() {
	this.locs=[];
	this.radius=2;
	this.length = function() {return this.locs.length};
	this.add = function(p, ll) { this.locs.push({name: p, latlng: ll})};
	this.latlng = function() {return (this.length()==1) ? this.locs[0].latlng : null};
	this.name = function() {return (this.length()==1) ? this.locs[0].name : null};
	this.get = function(m) {return this.locs[m]};
	this.select = function(m) {this.locs = [this.locs[m]]};
	this.clear = function() {this.locs=[]};
};	

/** @constructor */
function Stats() {
	// estadisticas para resultados de un tipo de combustible
	this.n = 0;
	this.max = this.min = this.mu = this.range = null;
	this.smin = [];		// estaciones con mínimo
	this.smax = [];		// estaciones con máximo
	this.g = null;
	this.range = function() {
		if (this.range==null) this.range=this.max-this.min;
		return this.range;
	}
	this.add =function(p, s, g) {
		if (this.mu) {
			if (p>this.max) {this.max=p;this.smax=[s];}
			else if (p==this.max) this.smax.push(s);
			else if (p<this.min) {this.min=p;this.smin=[s]}
			else if (p==this.min) this.smin.push(s);
			this.mu = (this.mu*this.n+p)/(++this.n);
		} else {
			this.max = this.min = this.mu = p;
			this.smin = [s];
			this.smax = [s];
			this.n = 1;
		}
		if (g) {
			if (this.g) {
				if (g[0]<this.g[0]) this.g[0]=g[0];
				else if (g[0]>this.g[1]) this.g[1]=g[0];
				if (g[1]<this.g[2]) this.g[2]=g[1];
				else if (g[1]>this.g[3]) this.g[3]=g[1];
			} else this.g = [g[0],g[0],g[1],g[1]];	
		}
		
	};
}

/** @constructor **/
function GasoleStats(gasoleData, types) {
	// Estadisticas de todos los datos de un objeto gasole
	// types indica sobre qué tipos de quiere calcular la aestadística
	// if (typeof types == "undefined") types = null;
	var stats = this.stats = {};						// estadísticas globales
	this.provinces = {};								// estadísticas provinciales
	function addData(datas, statP, statGlobal, o) {
		if (!statP[o]) statP[o] = new Stats();
		if (!statGlobal[o]) statGlobal[o] = new Stats();
		statP[o].add(datas.o[o],[p,t,s],datas.g);
		statGlobal[o].add(datas.o[o],[p,t,s],datas.g);
	}
	for (var p in gasoleData) {
		var datap = gasoleData[p];						// datos de la provincia
		var statp = this.provinces[p] = {};				// estadisticas provinciales, optiones y límites geográficos
		for (var t in datap) {
			var datat = datap[t];						// datos de la ciudad
			for (var s in datat) {
				datas = datat[s];						// datos de la estación
				if (types) {
					for (var i=types.length-1; i>=0; i--) {
						var o = types[i];
						if (datas.o[o]) addData(datas, statp, stats, o);
					}
				} else {
					for (var o in datas.o) addData(datas, statp, stats, o);
				}
			}
		}	
	}
}

/** @constructor */
function Gasole(callback) {
	this.color = function(p) {
		var range = this.stats.range();
		if (range!=0) {
			var v = (p-this.stats.min)/range;
			if (v<.33) return COLORS.min;
			if (v>.66) return COLORS.max;
		}
		return COLORS.mu;
	}
	this.init = function(data, date, stats) {
		this.info = data;
		this.date = date; 
		this.stats = stats ? stats : new GasoleStats(this.info);
	};
	// Obtiene datos de una provincia como estructura de datos
	this.provinceDataArray = function(p) {
		this.stats = new Stats();
		var type = this.type;
		result = [];
		var province = this.info[p];
		for (var t in province) {
			var infot = province[t];
			for (var s in infot) {
				var st = infot[s];
				var price = st.o[type];
				if (price){
					result.push({a:s,r:st.r,g:st.g,p:price,t:t,l:st.l,d:null});
					this.stats.add(price);
				}
			}
		}
		return result;
	}
	// Obtiene estructura de gasolineras próximas a una ubicación
	// @param loc: lugar y radio de búsqueda
	this.nearData = function(loc) {
		var l = loc.latlng(); if (!l) return;			// lugar de búsqueda
		var r = loc.radius;								// radio de búsqueda
		var result = {};
		for (var prov in this.info) {					// para todas las provincias…
			var infop = this.info[prov];				// info de provincia
			result[prov]={};
			for (var town in infop) {					// para todas las ciudades…
				var infot = infop[town];				// info de la ciudad
				result[prov][town]={};
				for (var station in infot) {			// para todas las estaciones…
					var st = infot[station];			// información de la estación
					var geo = st.g;				
					if (geo) {
						var dist = distance(geo,l,r);
						if (dist) result[prov][town][station] = st;
					}
				}
				if (!Object.keys(result[prov][town]).length) delete result[prov][town];
			}
			if (!Object.keys(result[prov]).length) delete result[prov];
		}
		return result;
	}
	// Obtiene array de gasolineras próximas a una ubicación
	// @param loc: lugar y radio de búsqueda
	// @param sort: criterio de ordenación
	this.nearDataArray = function(loc, type, sort) {
		var l = loc.latlng(); if (!l) return;			// lugar de búsqueda
		var r = loc.radius;								// radio de búsqueda
		this.stats = new Stats();
		var result = [];
		for (var prov in this.info) {					// para todas las provincias…
			var infop = this.info[prov];				// info de provincia
			for (var town in infop) {					// para todas las ciudades…
				var infot = infop[town];				// info de la ciudad
				for (var station in infot) {			// para todas las estaciones…
					var st = infot[station];			// información de la estación
					if (st.o.hasOwnProperty(type)) {
						var geo = st.g;
						if (geo) {
							var dist = distance(geo,l,r);
							if (dist) {
								var price = st.o[type];	// el precio en la estación
								result.push({a:station,prov:prov,g:geo,p:price,t:town,l:st.l,d:dist});
								this.stats.add(price);
							}
						}
					}
				}
			}
		}
		if (sort) return result.sort(function(a,b){return (a[sort]<b[sort]) ? -1 : 1;});
		return result;
	}
	// this.routeData = function(route) {
	// 	var result = [];
	// 	var type = this.type;
	// 	this.stats = new Stats();
	// 	var dist = Km2LL;
	// 	// Puntos kilométricos
	// 	for (var prov in this.info) {
	// 		var infop = this.info[prov];
	// 		for (var town in infop) {
	// 			var infot = infop[town];
	// 			for (var station in infot) {
	// 				var st = infot[station];
	// 				var price = st.o[type];
	// 				if (price) {
	// 					var g = st.g;
	// 					if (g) {
	// 						var valid = false;
	// 						var geo = new google.maps.LatLng(g[0],g[1]);
	// 						for (var wp=0; wp<route.length-1; wp++) {
	// 							var d0 = distance(g, [route[wp].lat(), route[wp].lng()], dist);
	// 							if (d0) valid = true;
	// 							else {
	// 								var d1 = distance(g, [route[wp+1].lat(), route[wp+1].lng()], dist);
	// 								if (d1) valid = true;
	// 								else {
	// 									var area = new google.maps.LatLngBounds(route[wp],route[wp+1]);
	// 									if (area.contains(geo)) {
	// 										var d = distanceOrto(geo,route[wp],route[wp+1]);
	// 										if (d<dist) valid = true;
	// 									}
	// 								}
	// 							}
	// 						}
	// 						if (valid) {
	// 							result.push({a:station,r:st.r,g:g,p:price,t:town,l:st.l,d:d});
	// 							this.stats.add(price);
	// 						}
	// 					}
	// 				}
	// 			}
	// 		}
	// 	}
	// 	return result;
	// }
	this.routeData = function(route) {
		var result = {},
			dist = 1;
		gasoleProcess(this.info, function(station,p,t,s) {
			var g = station.g;
			if (g) {
				for (var wp=0,wpl=route.length-1; wp<wpl; wp++) {
					var p1=route[wp],
						p2=route[wp+1];
					if (distanceOrto(g,[p1.lat(),p1.lng()],[p2.lat(),p2.lng()],dist)) {
						var presult = result[p];
						if (!presult) presult=result[p]={};
						var tresult = presult[t];
						if (!tresult) tresult=presult[t]={};
						tresult[s] = station;		
					}
				}
			}
		});
		return result;
	}

	this.callback = callback;	// al final de la carga de los datos
	this.stats = null;
	this.info = null; 		// datos de la api
	this.date = null;		// fecha de actualización
	this.type = "1";
	var storedData = null;
	if (checkLocalStorage()) {
		storedData = localStorage["gasole"];	// datos guardados
		if (storedData) storedData=JSON.parse(storedData);
	}
	if (!storedData || ((new Date().getTime()-parseInt(storedData.ts))>LS_EXPIRE)) {
		// buscar nuevos datos
		var req = new XMLHttpRequest();
		req.gasole = this;
		req.onreadystatechange = function() {
			if ((this.readyState==4)&&(this.status==200)) {
				var date = null;
				var newdata = JSON.parse(this.responseText);
				if (newdata._meta) {		// compatibilidad api antigua sin _meta
					date = new Date(newdata._meta.ts);
					newdata = newdata._data;
				} else {
					date = new Date();
				}
				this.gasole.init(newdata,date);
				if (checkLocalStorage()) {
					var data2store = {	ts: date.getTime(),
									data: newdata,
									stats: this.gasole.stats};
					localStorage.setItem("gasole", JSON.stringify(data2store));
				}
				if (this.gasole.callback) this.gasole.callback();
			}
		}
		req.open("GET", "/api/gasole");
		req.send();
	} else {
		this.init(storedData.data, new Date(storedData.ts), storedData.stats);
		if (this.callback) this.callback();
	}
}

/* Rellena dígitos de información numérica 
para conseguir el efecto de tablero de precios */
function fillPriceDigits(div, price) {
	div.innerHTML = "";
	var digits = price.toFixed(3);
	for (var d=0; d<digits.length; d++){
		var digitBack = document.createElement("div");
		digitBack.className = "back";
		(digits[d]==".") ? (digitBack.className += " point") : (digitBack.textContent = 8);
		var digitDiv = document.createElement("div"); 
		digitDiv.className = "digit"; 
		digitDiv.textContent = digits[d];
		digitBack.appendChild(digitDiv);
		div.appendChild(digitBack);
	}
}

/* Función para procesar datos de gasole, que ejecuta
el callback para cada estación encontrada */
function gasoleProcess(ginfo, callback) {
	for (var p in ginfo) {						// para todas las provincias
		var datap = ginfo[p];
		for (var t in datap) {					// para todas las ciudades
			var datat = datap[t];
			for (var s in datat) {				// para todas las estaciones
				callback(datat[s],p,t,s);		// llamamos a la función callback
			}
		}
	}
}

// Para propagación de evento
// http://blog.patricktresp.de/2012/02/internet-explorer-8-and-all-the-fun-stuff-e-stoppropagation-e-preventdefault-mousedown/
function stopEvent(e) {
	//e.cancelBubble is supported by IE -
	// this will kill the bubbling process.
	e.cancelBubble = true;
	e.returnValue = false;
	//e.stopPropagation works only in Firefox.
	if ( e.stopPropagation ) e.stopPropagation();
	if ( e.preventDefault ) e.preventDefault();		
	return false;
}

// Para ordenar dos nombres alfabéticamente
// http://stackoverflow.com/questions/990904/javascript-remove-accents-in-strings
function sortName(a,b) {
	function accentsTidy(s) {
		var r=s.toLowerCase();
		r = r.replace(new RegExp(/\s/g),"");	// borrar espacios
		r = r.replace(new RegExp(/[àá]/g),"a");
		r = r.replace(new RegExp(/[èé]/g),"e");
		r = r.replace(new RegExp(/[ìí]/g),"i");
		r = r.replace(new RegExp(/[òó]/g),"o");
		r = r.replace(new RegExp(/[ùú]/g),"u");
		return r;
	}
	return (accentsTidy(a)<accentsTidy(b)) ?  -1 : 1;
}

// Formateo de la fecha de actualización
function formatUpdate(date) {
	var u = "Precios actualizados el ";
	u += date.getDate() + " de " + MONTHS[date.getMonth()];
	u += " a las " + ("0" + date.getHours()).slice(-2) + ":" + ("0" + date.getMinutes()).slice(-2);
	return u;
}

// Array.filter
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter
if (!Array.prototype.filter) {
	Array.prototype.filter = function(fun /*, thisp*/) {
		"use strict";
		if (this == null) throw new TypeError();
		var t = Object(this);
		var len = t.length >>> 0;
		if (typeof fun != "function") throw new TypeError();
		var res = [];
		var thisp = arguments[1];
		for (var i = 0; i < len; i++) {
			if (i in t) {
				var val = t[i]; // in case fun mutates this
				if (fun.call(thisp, val, i, t)) res.push(val);
			}
		}
		return res;
	};
}


// Para medir tiempo
var TIME;
function tic() {
	TIME = new Date().getTime();
}
function toc(s) {
	console.log((s ? (s+" :") : "Transcurridos: ") + (new Date().getTime()-TIME) + " ms");
}
/* Inserta la miga de pan */
function breadCrumb(id, label) {
	var div = document.getElementById(id);
	if (div) {
		var separator = "<span class='sprt breadcrumb'>&nbsp;</span>";
		div.innerHTML = "<a href='/' class='bc'>Gasolineras</a>"+separator;
		var pathArray = window.location.pathname.split("/");
		var bc = document.createElement("a");
		bc.className = "bc";
		if (pathArray[1]=="resultados") {
			bc.textContent = "Cerca de "+decodeURI(pathArray[2]);
			bc.href = "#";
			div.appendChild(bc);
			return;
		} else if (pathArray[1]=="ruta") {
			bc.textContent = "Ruta entre "+decodeURI(pathArray[2]) + " y" + decodeURI(pathArray[3]);
			bc.href = "#";
			bc.title = bc.textContent;
			div.appendChild(bc);
			return;
		}
		var name = decodeName(pathArray[2]);
		bc.textContent = name;
		bc.title = "Ver todas las gasolineras en la provincia de "+name;
		var plink = "/gasolineras/"+pathArray[2];
		bc.href = plink;
		div.appendChild(bc);
		if (pathArray[3]) {
			div.innerHTML+=separator;
			bc = document.createElement("a");
			bc.className = "bc";
			name = decodeName(pathArray[3]);
			bc.textContent = name;
			bc.title = "Ver todas las gasolineras en la localidad de "+name;
			bc.href = plink+"/"+pathArray[3];
			div.appendChild(bc);
		}
		if (pathArray[4]) {
			div.innerHTML+=separator;
			bc = document.createElement("a");
			bc.className = "bc";
			bc.textContent = "Gasolinera " + (label ? label : "") + " en " + toTitle(decodeName(pathArray[4]));
			bc.href = window.location.pathname;
			div.appendChild(bc);
		}
	}
}
/* Para ordenamiento de vectores (no empleado) */
// function quickSort(a) {
// 	var alen = a.length;
// 	/* Ordenación QuickSort de una tabla */
// 	if (alen<=1) return a;
// 	var npivot = Math.floor(Math.random()*alen);
// 	for (var p=npivot+1; p<alen; p++)
// 		if (a[p][0]!=a[npivot][0]) break;
// 	var pivot = a.splice(p-1, 1);
// 	alen = a.length;
// 	var less = [];
// 	var greater = [];
// 	for (var i=0; i<alen; i++) {
// 		if (a[i][0]<=pivot[0][0])
// 			less.push(a[i]);
// 		else greater.push(a[i]);
// 	}
// 	return quickSort(less).concat(pivot, quickSort(greater));
// }


/* Función que confierte un círculo en un path, para transformaciones de raphael */
// NO BORRAR, PUEDE SER ÚTIL
// function circle2path(x , y, r) // x and y are center and r is the radius
// {
// 	// https://groups.google.com/forum/#!topic/raphaeljs/6gH8TiOWlAw
// 	var s = "M";
// 	s = s + "" + (x) + "," + (y-r) + "A"+r+","+r+",0,1,1,"+(x-0.1)+","+(y-r)+"z";
// 	return s;
// }